// Generated by CoffeeScript 1.12.7
(function() {
  var Car, Horse, Human, Marvin, Robot, car, horse, http, marvin,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  http = require('http');

  http.createServer(function(req, res) {
    res.writeHead(200, {
      'Content-Type': 'text/plain'
    });
    res.end('Hello, World!\n').listen(3000, '127.0.0.1');
    return console.log('Server running at http://127.0.0.1:3000/');
  });

  Car = (function() {
    function Car(name) {
      this.name = name;
    }

    Car.prototype.mileage = 81000;

    return Car;

  })();

  car = new Car("Audi");

  console.log("The " + car.name + " has mileage of " + car.mileage);

  Human = (function() {
    function Human(legs) {
      this.legs = legs != null ? legs : 2;
    }

    Human.prototype.growLeg = function() {
      return this.legs++;
    };

    return Human;

  })();

  Horse = (function(superClass) {
    extend(Horse, superClass);

    function Horse() {
      return Horse.__super__.constructor.apply(this, arguments);
    }

    return Horse;

  })(Human);

  horse = new Horse;

  horse.growLeg();

  horse.growLeg();

  console.log("A horse has " + horse.legs + " legs");

  Robot = (function() {
    function Robot() {}

    Robot.prototype.makeTea = function() {
      return console.log('Making tea.');
    };

    return Robot;

  })();

  Marvin = (function(superClass) {
    extend(Marvin, superClass);

    function Marvin() {
      return Marvin.__super__.constructor.apply(this, arguments);
    }

    Marvin.prototype.makeTea = function() {
      console.log('I have a brain the size of a planet');
      return Marvin.__super__.makeTea.apply(this, arguments);
    };

    return Marvin;

  })(Robot);

  marvin = new Marvin;

  marvin.makeTea();

}).call(this);
